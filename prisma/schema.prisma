generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  username        String   @unique
  hashed_password String
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now()) @updatedAt
  roles           String[] @default(["USER"])

  Articles Article[] @relation("User_1-N_Article")
  Sales    Sale[]    @relation("User_1-N_Sale")
  Carts    Cart[]    @relation("User_1-N_Cart")
}

model Cart {
  id         Int      @id @default(autoincrement())
  user_id    Int
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  ArticlesOnCart ArticlesOnCart[] @relation("Cart_1-N_ArticlesOnCart")
  User           User             @relation("User_1-N_Cart", fields: [user_id], references: [id], onDelete: Cascade)
}

model ArticlesOnCart {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  article_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Cart    Cart    @relation("Cart_1-N_ArticlesOnCart", fields: [cart_id], references: [id])
  Article Article @relation("Article_1-N_ArticlesOnCart", fields: [article_id], references: [id])

  @@unique([cart_id, article_id])
}

model Game {
  id            Int      @id @default(autoincrement())
  name          String
  image_url     String?
  console       String
  edition       String
  region        String
  released_year Int
  barcode_data  String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt

  Articles Article[] @relation("Game_1-N_Article")

  @@unique([name, console, edition, region, released_year])
}

model Article {
  id              Int      @id @default(autoincrement())
  user_id         Int
  game_id         Int
  purchased_price Float
  estimated_price Float
  origin          String
  state           String
  content         String[]
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now()) @updatedAt

  User           User             @relation("User_1-N_Article", fields: [user_id], references: [id], onDelete: Cascade)
  Sale           Sale?            @relation("Sale_0/1-1_Article")
  Game           Game             @relation("Game_1-N_Article", fields: [game_id], references: [id], onDelete: Cascade)
  ArticlesOnCart ArticlesOnCart[] @relation("Article_1-N_ArticlesOnCart")
}

model Sale {
  id           Int      @id @default(autoincrement())
  user_id      Int
  article_id   Int
  solded_price Float
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt

  Article Article @relation("Sale_0/1-1_Article", fields: [article_id], references: [id], onDelete: Cascade)
  User    User    @relation("User_1-N_Sale", fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([article_id])
}
